{"version":3,"sources":["ng://verify-mail-duplicate/lib/mailModel.ts","ng://verify-mail-duplicate/lib/verify-mail-duplicate.service.ts","ng://verify-mail-duplicate/lib/verify-mail-duplicate.module.ts"],"names":["MailModel","this","mail","Array","push","VerifyMailDuplicateService","mailModel","prototype","verifyMail","_this","judge","Promise","resolve","reject","forEach","m","console","log","trim","length","result","color","Injectable","args","providedIn","VerifyMailDuplicateModule","NgModule","declarations","imports","exports","providers"],"mappings":"mSAAA,IAAAA,EAEE,WADAC,KAAAC,KAAsB,IAAIC,MAExBF,KAAKC,KAAKE,KAAK,cACfH,KAAKC,KAAKE,KAAK,gBCJnB,IAAAC,EAAA,WASE,SAAAA,EAAoBC,GAAAL,KAAAK,UAAAA,SAMpBD,EAAAE,UAAAC,WAAA,SAAWN,GAAX,IAAAO,EAAAR,KAEE,OADAA,KAAKS,OAAQ,EACN,IAAIC,SAAO,SAAEC,EAASC,GAC3BJ,EAAKH,UAAUJ,KAAKY,SAAO,SAACC,GAE1B,GADAC,QAAQC,IAAIF,GACe,IAAvBb,EAAKgB,OAAOC,OAMd,OALAH,QAAQC,IAAI,iBACZJ,EAAO,CACLO,QAAQ,EACRC,MAAO,QAIPN,IAAMb,GACRc,QAAQC,IAAI,YACZR,EAAKC,OAAQ,IAEbM,QAAQC,IAAI,YACZR,EAAKC,OAAQ,EACbE,EAAQ,CACNQ,QAAQ,EACRC,MAAO,YAITZ,EAAKC,MACPE,EAAQ,CACNQ,QAAQ,EACRC,MAAO,UAGTT,EAAQ,CACNQ,QAAQ,EACRC,MAAO,gCA7ChBC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAHLxB,2HADT,GCAA,IAAAyB,EAAA,WAKA,SAAAA,KAOyC,2BAPxCC,EAAAA,SAAQH,KAAA,CAAC,CACRI,aAAc,GACdC,QAAS,GAETC,QAAS,GACTC,UAAW,CAAC9B,OAE2ByB,EAZzC","sourcesContent":["export class MailModel {\n  mail: Array<string> = new Array();\n  constructor() {\n    this.mail.push('billy@test');\n    this.mail.push('billy2@test');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MailModel } from './mailModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VerifyMailDuplicateService {\n  judge;\n\n  constructor(private mailModel: MailModel) { }\n  /**\n   * æ­¤ç¨ä¾å¤æ·æ¯å¦æéè¤çä¿¡ç®±,è¥åå³ç©ä»¶çresultçºtrue,åæ­¤ä¿¡ç®±çºåè¨±ç³è«,\n   * åå³ç©ä»¶çº {result: boolean , color: string}\n   * @param mail è¼¸å¥ä¿¡ç®±çåæ¸\n   */\n  verifyMail(mail: string): Promise<any> {\n    this.judge = true;\n    return new Promise((resolve, reject) => {\n      this.mailModel.mail.forEach(m => {\n        console.log(m);\n        if (mail.trim().length === 0) {\n          console.log('æ­¤è¼¸å¥ä¿¡ç®±çºç©ºå¼');\n          reject({\n            result: false,\n            color: 'red'\n          });\n          return;\n        }\n        if (m !== mail) {\n          console.log('æ­¤è¼¸å¥ä¿¡ç®±ç¡éè¤');\n          this.judge = true;\n        } else {\n          console.log('æ­¤è¼¸å¥ä¿¡ç®±æéè¤');\n          this.judge = false;\n          resolve({\n            result: false,\n            color: 'red'\n          });\n        }\n      });\n      if (this.judge) {\n        resolve({\n          result: true,\n          color: 'green'\n        });\n      } else {\n        resolve({\n          result: false,\n          color: 'red'\n        });\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MailModel } from './mailModel';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  exports: [],\n  providers: [MailModel]\n})\nexport class VerifyMailDuplicateModule { }\n"]}