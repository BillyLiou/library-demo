{"version":3,"file":"verify-mail-duplicate.js","sources":["ng://verify-mail-duplicate/lib/mailModel.ts","ng://verify-mail-duplicate/lib/verify-mail-duplicate.service.ts","ng://verify-mail-duplicate/lib/verify-mail-duplicate.module.ts"],"sourcesContent":["export class MailModel {\n  mail: Array<string> = new Array();\n  constructor() {\n    this.mail.push('billy@test');\n    this.mail.push('billy2@test');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MailModel } from './mailModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VerifyMailDuplicateService {\n  judge;\n\n  constructor(private mailModel: MailModel) { }\n  /**\n   * æ­¤ç¨ä¾å¤æ·æ¯å¦æéè¤çä¿¡ç®±,è¥åå³ç©ä»¶çresultçºtrue,åæ­¤ä¿¡ç®±çºåè¨±ç³è«,\n   * åå³ç©ä»¶çº {result: boolean , color: string}\n   * @param mail è¼¸å¥ä¿¡ç®±çåæ¸\n   */\n  verifyMail(mail: string): Promise<any> {\n    this.judge = true;\n    return new Promise((resolve, reject) => {\n      this.mailModel.mail.forEach(m => {\n        console.log(m);\n        if (mail.trim().length === 0) {\n          console.log('æ­¤è¼¸å¥ä¿¡ç®±çºç©ºå¼');\n          reject({\n            result: false,\n            color: 'red'\n          });\n          return;\n        }\n        if (m !== mail) {\n          console.log('æ­¤è¼¸å¥ä¿¡ç®±ç¡éè¤');\n          this.judge = true;\n        } else {\n          console.log('æ­¤è¼¸å¥ä¿¡ç®±æéè¤');\n          this.judge = false;\n          resolve({\n            result: false,\n            color: 'red'\n          });\n        }\n      });\n      if (this.judge) {\n        resolve({\n          result: true,\n          color: 'green'\n        });\n      } else {\n        resolve({\n          result: false,\n          color: 'red'\n        });\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MailModel } from './mailModel';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  exports: [],\n  providers: [MailModel]\n})\nexport class VerifyMailDuplicateModule { }\n"],"names":[],"mappings":";;;;;;;AAAA;IAEE;QADA,SAAI,GAAkB,IAAI,KAAK,EAAE,CAAC;QAEhC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KAC/B;IACH,gBAAC;CAAA,IAAA;;;IALC,yBAAkC;;;;;;;;ACDpC;IASE,oCAAoB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;KAAK;;;;;;;;;;;;IAM7C,+CAAU;;;;;;IAAV,UAAW,IAAY;QAAvB,iBAqCC;QApCC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,OAAO,IAAI,OAAO;;;;;QAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO;;;;YAAC,UAAA,CAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACf,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC5B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;oBACxB,MAAM,CAAC;wBACL,MAAM,EAAE,KAAK;wBACb,KAAK,EAAE,KAAK;qBACb,CAAC,CAAC;oBACH,OAAO;iBACR;gBACD,IAAI,CAAC,KAAK,IAAI,EAAE;oBACd,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;oBACxB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;iBACnB;qBAAM;oBACL,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;oBACxB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,OAAO,CAAC;wBACN,MAAM,EAAE,KAAK;wBACb,KAAK,EAAE,KAAK;qBACb,CAAC,CAAC;iBACJ;aACF,EAAC,CAAC;YACH,IAAI,KAAI,CAAC,KAAK,EAAE;gBACd,OAAO,CAAC;oBACN,MAAM,EAAE,IAAI;oBACZ,KAAK,EAAE,OAAO;iBACf,CAAC,CAAC;aACJ;iBAAM;gBACL,OAAO,CAAC;oBACN,MAAM,EAAE,KAAK;oBACb,KAAK,EAAE,KAAK;iBACb,CAAC,CAAC;aACJ;SACF,EAAC,CAAC;KACJ;;gBAjDF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;gBAJQ,SAAS;;;qCADlB;CAGA,IAkDC;;;IA9CC,2CAAM;;;;;IAEM,+CAA4B;;;;;;;;ACT1C;IAKA;KAO0C;;gBAPzC,QAAQ,SAAC;oBACR,YAAY,EAAE,EAAE;oBAChB,OAAO,EAAE,EACR;oBACD,OAAO,EAAE,EAAE;oBACX,SAAS,EAAE,CAAC,SAAS,CAAC;iBACvB;;IACwC,gCAAC;CAP1C;;;;;;;;;;;;;;;;"}